Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

data.aws_ami.ubuntu: Refreshing state...
data.aws_availability_zones.available: Refreshing state...

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  + aws_autoscaling_group.appserver
      id:                                          <computed>
      arn:                                         <computed>
      availability_zones.#:                        <computed>
      default_cooldown:                            <computed>
      desired_capacity:                            "2"
      force_delete:                                "true"
      health_check_grace_period:                   "30"
      health_check_type:                           "EC2"
      launch_configuration:                        "appserver-asg-lc"
      load_balancers.#:                            <computed>
      max_size:                                    "5"
      metrics_granularity:                         "1Minute"
      min_size:                                    "2"
      name:                                        "appServer "
      protect_from_scale_in:                       "false"
      service_linked_role_arn:                     <computed>
      target_group_arns.#:                         <computed>
      vpc_zone_identifier.#:                       <computed>
      wait_for_capacity_timeout:                   "10m"

  + aws_autoscaling_group.webserver
      id:                                          <computed>
      arn:                                         <computed>
      availability_zones.#:                        <computed>
      default_cooldown:                            <computed>
      desired_capacity:                            "2"
      force_delete:                                "true"
      health_check_grace_period:                   "30"
      health_check_type:                           "EC2"
      launch_configuration:                        "webserver-asg-lc"
      load_balancers.#:                            <computed>
      max_size:                                    "5"
      metrics_granularity:                         "1Minute"
      min_size:                                    "2"
      name:                                        "WebServers "
      protect_from_scale_in:                       "false"
      service_linked_role_arn:                     <computed>
      target_group_arns.#:                         <computed>
      vpc_zone_identifier.#:                       <computed>
      wait_for_capacity_timeout:                   "10m"

  + aws_db_instance.prod
      id:                                          <computed>
      address:                                     <computed>
      allocated_storage:                           "20"
      apply_immediately:                           <computed>
      arn:                                         <computed>
      auto_minor_version_upgrade:                  "true"
      availability_zone:                           <computed>
      backup_retention_period:                     "7"
      backup_window:                               <computed>
      ca_cert_identifier:                          <computed>
      character_set_name:                          <computed>
      copy_tags_to_snapshot:                       "false"
      db_subnet_group_name:                        "demo_aurora_db_subnet_group"
      endpoint:                                    <computed>
      engine:                                      "mysql"
      engine_version:                              "5.7.17"
      hosted_zone_id:                              <computed>
      identifier:                                  "demo-prod-rds"
      identifier_prefix:                           <computed>
      instance_class:                              "db.t2.micro"
      kms_key_id:                                  <computed>
      license_model:                               <computed>
      maintenance_window:                          <computed>
      monitoring_interval:                         "0"
      monitoring_role_arn:                         <computed>
      multi_az:                                    "true"
      name:                                        <computed>
      option_group_name:                           <computed>
      parameter_group_name:                        <computed>
      password:                                    <sensitive>
      port:                                        <computed>
      publicly_accessible:                         "true"
      replicas.#:                                  <computed>
      resource_id:                                 <computed>
      skip_final_snapshot:                         "false"
      status:                                      <computed>
      storage_type:                                "gp2"
      timezone:                                    <computed>
      username:                                    "test"
      vpc_security_group_ids.#:                    <computed>

  + aws_db_subnet_group.rds_subnet_group
      id:                                          <computed>
      arn:                                         <computed>
      description:                                 "Allowed subnets for Aurora DB cluster instances"
      name:                                        "demo_aurora_db_subnet_group"
      name_prefix:                                 <computed>
      subnet_ids.#:                                <computed>
      tags.%:                                      "2"
      tags.ManagedBy:                              "Cloudops"
      tags.Name:                                   "demo-rds-Subnet-Group"

  + aws_eip.nat_eip
      id:                                          <computed>
      allocation_id:                               <computed>
      association_id:                              <computed>
      domain:                                      <computed>
      instance:                                    <computed>
      network_interface:                           <computed>
      private_ip:                                  <computed>
      public_ip:                                   <computed>
      public_ipv4_pool:                            <computed>
      vpc:                                         "true"

  + aws_internet_gateway.igw
      id:                                          <computed>
      owner_id:                                    <computed>
      tags.%:                                      "1"
      tags.Name:                                   "demo-vpc-internet-gateway"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_launch_configuration.for_appserver
      id:                                          <computed>
      associate_public_ip_address:                 "false"
      ebs_block_device.#:                          <computed>
      ebs_optimized:                               <computed>
      enable_monitoring:                           "true"
      image_id:                                    "ami-0ebc8f6f580a04647"
      instance_type:                               "t2.micro"
      key_name:                                    "newck"
      name:                                        "appserver-asg-lc"
      root_block_device.#:                         "1"
      root_block_device.0.delete_on_termination:   "true"
      root_block_device.0.iops:                    <computed>
      root_block_device.0.volume_size:             "30"
      root_block_device.0.volume_type:             "gp2"
      security_groups.#:                           <computed>
      user_data:                                   "e7f220f3c6fc181e01e1917fcc6163751ceeca43"

  + aws_launch_configuration.for_webserver
      id:                                          <computed>
      associate_public_ip_address:                 "false"
      ebs_block_device.#:                          <computed>
      ebs_optimized:                               <computed>
      enable_monitoring:                           "true"
      image_id:                                    "ami-0ebc8f6f580a04647"
      instance_type:                               "t2.micro"
      key_name:                                    "newck"
      name:                                        "webserver-asg-lc"
      root_block_device.#:                         "1"
      root_block_device.0.delete_on_termination:   "true"
      root_block_device.0.iops:                    <computed>
      root_block_device.0.volume_size:             "30"
      root_block_device.0.volume_type:             "gp2"
      security_groups.#:                           <computed>
      user_data:                                   "e7f220f3c6fc181e01e1917fcc6163751ceeca43"

  + aws_lb.back_end
      id:                                          <computed>
      access_logs.#:                               <computed>
      arn:                                         <computed>
      arn_suffix:                                  <computed>
      dns_name:                                    <computed>
      enable_deletion_protection:                  "false"
      enable_http2:                                "true"
      idle_timeout:                                "60"
      internal:                                    "true"
      ip_address_type:                             <computed>
      load_balancer_type:                          "application"
      name:                                        "demo-Back-End-ALB"
      security_groups.#:                           <computed>
      subnet_mapping.#:                            <computed>
      subnets.#:                                   <computed>
      vpc_id:                                      <computed>
      zone_id:                                     <computed>

  + aws_lb.front_end
      id:                                          <computed>
      access_logs.#:                               <computed>
      arn:                                         <computed>
      arn_suffix:                                  <computed>
      dns_name:                                    <computed>
      enable_deletion_protection:                  "false"
      enable_http2:                                "true"
      idle_timeout:                                "60"
      internal:                                    "false"
      ip_address_type:                             <computed>
      load_balancer_type:                          "application"
      name:                                        "demo-Front-End-ALB"
      security_groups.#:                           <computed>
      subnet_mapping.#:                            <computed>
      subnets.#:                                   <computed>
      vpc_id:                                      <computed>
      zone_id:                                     <computed>

  + aws_lb_listener.appserver
      id:                                          <computed>
      arn:                                         <computed>
      default_action.#:                            "1"
      default_action.0.order:                      <computed>
      default_action.0.target_group_arn:           "${aws_lb_target_group.back_end.arn}"
      default_action.0.type:                       "forward"
      load_balancer_arn:                           "${aws_lb.back_end.arn}"
      port:                                        "80"
      protocol:                                    "HTTP"
      ssl_policy:                                  <computed>

  + aws_lb_listener.webserver
      id:                                          <computed>
      arn:                                         <computed>
      default_action.#:                            "1"
      default_action.0.order:                      <computed>
      default_action.0.target_group_arn:           "${aws_lb_target_group.front_end.arn}"
      default_action.0.type:                       "forward"
      load_balancer_arn:                           "${aws_lb.front_end.arn}"
      port:                                        "80"
      protocol:                                    "HTTP"
      ssl_policy:                                  <computed>

  + aws_lb_target_group.back_end
      id:                                          <computed>
      arn:                                         <computed>
      arn_suffix:                                  <computed>
      deregistration_delay:                        "300"
      health_check.#:                              <computed>
      name:                                        "Target-Group-for-backend"
      port:                                        "80"
      protocol:                                    "HTTP"
      proxy_protocol_v2:                           "false"
      slow_start:                                  "0"
      stickiness.#:                                <computed>
      target_type:                                 "instance"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_lb_target_group.front_end
      id:                                          <computed>
      arn:                                         <computed>
      arn_suffix:                                  <computed>
      deregistration_delay:                        "300"
      health_check.#:                              <computed>
      name:                                        "Target-Group-for-frontend"
      port:                                        "80"
      protocol:                                    "HTTP"
      proxy_protocol_v2:                           "false"
      slow_start:                                  "0"
      stickiness.#:                                <computed>
      target_type:                                 "instance"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_nat_gateway.ngw
      id:                                          <computed>
      allocation_id:                               "${aws_eip.nat_eip.id}"
      network_interface_id:                        <computed>
      private_ip:                                  <computed>
      public_ip:                                   <computed>
      subnet_id:                                   "${aws_subnet.public_subnet_1.id}"
      tags.%:                                      "1"
      tags.Name:                                   "demo-vpc-NAT-gateway"

  + aws_route_table.private
      id:                                          <computed>
      owner_id:                                    <computed>
      propagating_vgws.#:                          <computed>
      route.#:                                     "1"
      route.~667316403.cidr_block:                 "0.0.0.0/0"
      route.~667316403.egress_only_gateway_id:     ""
      route.~667316403.gateway_id:                 "${aws_nat_gateway.ngw.id}"
      route.~667316403.instance_id:                ""
      route.~667316403.ipv6_cidr_block:            ""
      route.~667316403.nat_gateway_id:             ""
      route.~667316403.network_interface_id:       ""
      route.~667316403.transit_gateway_id:         ""
      route.~667316403.vpc_peering_connection_id:  ""
      tags.%:                                      "1"
      tags.Name:                                   "demo-private-route-table"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_route_table.public
      id:                                          <computed>
      owner_id:                                    <computed>
      propagating_vgws.#:                          <computed>
      route.#:                                     "1"
      route.~3624129189.cidr_block:                "0.0.0.0/0"
      route.~3624129189.egress_only_gateway_id:    ""
      route.~3624129189.gateway_id:                "${aws_internet_gateway.igw.id}"
      route.~3624129189.instance_id:               ""
      route.~3624129189.ipv6_cidr_block:           ""
      route.~3624129189.nat_gateway_id:            ""
      route.~3624129189.network_interface_id:      ""
      route.~3624129189.transit_gateway_id:        ""
      route.~3624129189.vpc_peering_connection_id: ""
      tags.%:                                      "1"
      tags.Name:                                   "demo-public-route-table"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_route_table_association.to_private_subnet1
      id:                                          <computed>
      route_table_id:                              "${aws_route_table.private.id}"
      subnet_id:                                   "${aws_subnet.private_subnet_1.id}"

  + aws_route_table_association.to_private_subnet2
      id:                                          <computed>
      route_table_id:                              "${aws_route_table.private.id}"
      subnet_id:                                   "${aws_subnet.private_subnet_2.id}"

  + aws_route_table_association.to_public_subnet1
      id:                                          <computed>
      route_table_id:                              "${aws_route_table.public.id}"
      subnet_id:                                   "${aws_subnet.public_subnet_1.id}"

  + aws_route_table_association.to_public_subnet2
      id:                                          <computed>
      route_table_id:                              "${aws_route_table.public.id}"
      subnet_id:                                   "${aws_subnet.public_subnet_2.id}"

  + aws_security_group.appservers
      id:                                          <computed>
      arn:                                         <computed>
      description:                                 "Created by Cloudops"
      egress.#:                                    "1"
      egress.482069346.cidr_blocks.#:              "1"
      egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
      egress.482069346.description:                ""
      egress.482069346.from_port:                  "0"
      egress.482069346.ipv6_cidr_blocks.#:         "0"
      egress.482069346.prefix_list_ids.#:          "0"
      egress.482069346.protocol:                   "-1"
      egress.482069346.security_groups.#:          "0"
      egress.482069346.self:                       "false"
      egress.482069346.to_port:                    "0"
      ingress.#:                                   "3"
      ingress.2214680975.cidr_blocks.#:            "1"
      ingress.2214680975.cidr_blocks.0:            "0.0.0.0/0"
      ingress.2214680975.description:              ""
      ingress.2214680975.from_port:                "80"
      ingress.2214680975.ipv6_cidr_blocks.#:       "0"
      ingress.2214680975.prefix_list_ids.#:        "0"
      ingress.2214680975.protocol:                 "tcp"
      ingress.2214680975.security_groups.#:        "0"
      ingress.2214680975.self:                     "false"
      ingress.2214680975.to_port:                  "80"
      ingress.2541437006.cidr_blocks.#:            "1"
      ingress.2541437006.cidr_blocks.0:            "0.0.0.0/0"
      ingress.2541437006.description:              ""
      ingress.2541437006.from_port:                "22"
      ingress.2541437006.ipv6_cidr_blocks.#:       "0"
      ingress.2541437006.prefix_list_ids.#:        "0"
      ingress.2541437006.protocol:                 "tcp"
      ingress.2541437006.security_groups.#:        "0"
      ingress.2541437006.self:                     "false"
      ingress.2541437006.to_port:                  "22"
      ingress.2617001939.cidr_blocks.#:            "1"
      ingress.2617001939.cidr_blocks.0:            "0.0.0.0/0"
      ingress.2617001939.description:              ""
      ingress.2617001939.from_port:                "443"
      ingress.2617001939.ipv6_cidr_blocks.#:       "0"
      ingress.2617001939.prefix_list_ids.#:        "0"
      ingress.2617001939.protocol:                 "tcp"
      ingress.2617001939.security_groups.#:        "0"
      ingress.2617001939.self:                     "false"
      ingress.2617001939.to_port:                  "443"
      name:                                        "demo-ec2-appservers"
      owner_id:                                    <computed>
      revoke_rules_on_delete:                      "false"
      tags.%:                                      "1"
      tags.Name:                                   "demo-ec2-appservers"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_security_group.appservers_alb
      id:                                          <computed>
      arn:                                         <computed>
      description:                                 "Created by Cloudops"
      egress.#:                                    "1"
      egress.482069346.cidr_blocks.#:              "1"
      egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
      egress.482069346.description:                ""
      egress.482069346.from_port:                  "0"
      egress.482069346.ipv6_cidr_blocks.#:         "0"
      egress.482069346.prefix_list_ids.#:          "0"
      egress.482069346.protocol:                   "-1"
      egress.482069346.security_groups.#:          "0"
      egress.482069346.self:                       "false"
      egress.482069346.to_port:                    "0"
      ingress.#:                                   "2"
      ingress.2214680975.cidr_blocks.#:            "1"
      ingress.2214680975.cidr_blocks.0:            "0.0.0.0/0"
      ingress.2214680975.description:              ""
      ingress.2214680975.from_port:                "80"
      ingress.2214680975.ipv6_cidr_blocks.#:       "0"
      ingress.2214680975.prefix_list_ids.#:        "0"
      ingress.2214680975.protocol:                 "tcp"
      ingress.2214680975.security_groups.#:        "0"
      ingress.2214680975.self:                     "false"
      ingress.2214680975.to_port:                  "80"
      ingress.2617001939.cidr_blocks.#:            "1"
      ingress.2617001939.cidr_blocks.0:            "0.0.0.0/0"
      ingress.2617001939.description:              ""
      ingress.2617001939.from_port:                "443"
      ingress.2617001939.ipv6_cidr_blocks.#:       "0"
      ingress.2617001939.prefix_list_ids.#:        "0"
      ingress.2617001939.protocol:                 "tcp"
      ingress.2617001939.security_groups.#:        "0"
      ingress.2617001939.self:                     "false"
      ingress.2617001939.to_port:                  "443"
      name:                                        "demo-appservers-ALB"
      owner_id:                                    <computed>
      revoke_rules_on_delete:                      "false"
      tags.%:                                      "1"
      tags.Name:                                   "demo-appservers-ALB"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_security_group.rds-prod
      id:                                          <computed>
      arn:                                         <computed>
      description:                                 "Created by Cloudops"
      egress.#:                                    "1"
      egress.482069346.cidr_blocks.#:              "1"
      egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
      egress.482069346.description:                ""
      egress.482069346.from_port:                  "0"
      egress.482069346.ipv6_cidr_blocks.#:         "0"
      egress.482069346.prefix_list_ids.#:          "0"
      egress.482069346.protocol:                   "-1"
      egress.482069346.security_groups.#:          "0"
      egress.482069346.self:                       "false"
      egress.482069346.to_port:                    "0"
      ingress.#:                                   "2"
      ingress.1163740523.cidr_blocks.#:            "1"
      ingress.1163740523.cidr_blocks.0:            "0.0.0.0/0"
      ingress.1163740523.description:              ""
      ingress.1163740523.from_port:                "3306"
      ingress.1163740523.ipv6_cidr_blocks.#:       "0"
      ingress.1163740523.prefix_list_ids.#:        "0"
      ingress.1163740523.protocol:                 "tcp"
      ingress.1163740523.security_groups.#:        "0"
      ingress.1163740523.self:                     "false"
      ingress.1163740523.to_port:                  "3306"
      ingress.~471043921.cidr_blocks.#:            "0"
      ingress.~471043921.description:              ""
      ingress.~471043921.from_port:                "3306"
      ingress.~471043921.ipv6_cidr_blocks.#:       "0"
      ingress.~471043921.prefix_list_ids.#:        "0"
      ingress.~471043921.protocol:                 "tcp"
      ingress.~471043921.security_groups.#:        <computed>
      ingress.~471043921.self:                     "false"
      ingress.~471043921.to_port:                  "3306"
      name:                                        "demo-rds-production"
      owner_id:                                    <computed>
      revoke_rules_on_delete:                      "false"
      tags.%:                                      "1"
      tags.Name:                                   "demo-rds-production"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_security_group.webservers
      id:                                          <computed>
      arn:                                         <computed>
      description:                                 "Created by Cloudops"
      egress.#:                                    "1"
      egress.482069346.cidr_blocks.#:              "1"
      egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
      egress.482069346.description:                ""
      egress.482069346.from_port:                  "0"
      egress.482069346.ipv6_cidr_blocks.#:         "0"
      egress.482069346.prefix_list_ids.#:          "0"
      egress.482069346.protocol:                   "-1"
      egress.482069346.security_groups.#:          "0"
      egress.482069346.self:                       "false"
      egress.482069346.to_port:                    "0"
      ingress.#:                                   "3"
      ingress.2214680975.cidr_blocks.#:            "1"
      ingress.2214680975.cidr_blocks.0:            "0.0.0.0/0"
      ingress.2214680975.description:              ""
      ingress.2214680975.from_port:                "80"
      ingress.2214680975.ipv6_cidr_blocks.#:       "0"
      ingress.2214680975.prefix_list_ids.#:        "0"
      ingress.2214680975.protocol:                 "tcp"
      ingress.2214680975.security_groups.#:        "0"
      ingress.2214680975.self:                     "false"
      ingress.2214680975.to_port:                  "80"
      ingress.2541437006.cidr_blocks.#:            "1"
      ingress.2541437006.cidr_blocks.0:            "0.0.0.0/0"
      ingress.2541437006.description:              ""
      ingress.2541437006.from_port:                "22"
      ingress.2541437006.ipv6_cidr_blocks.#:       "0"
      ingress.2541437006.prefix_list_ids.#:        "0"
      ingress.2541437006.protocol:                 "tcp"
      ingress.2541437006.security_groups.#:        "0"
      ingress.2541437006.self:                     "false"
      ingress.2541437006.to_port:                  "22"
      ingress.2617001939.cidr_blocks.#:            "1"
      ingress.2617001939.cidr_blocks.0:            "0.0.0.0/0"
      ingress.2617001939.description:              ""
      ingress.2617001939.from_port:                "443"
      ingress.2617001939.ipv6_cidr_blocks.#:       "0"
      ingress.2617001939.prefix_list_ids.#:        "0"
      ingress.2617001939.protocol:                 "tcp"
      ingress.2617001939.security_groups.#:        "0"
      ingress.2617001939.self:                     "false"
      ingress.2617001939.to_port:                  "443"
      name:                                        "demo-ec2-webservers"
      owner_id:                                    <computed>
      revoke_rules_on_delete:                      "false"
      tags.%:                                      "1"
      tags.Name:                                   "demo-ec2-webservers"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_security_group.webservers_alb
      id:                                          <computed>
      arn:                                         <computed>
      description:                                 "Created by Cloudops"
      egress.#:                                    "1"
      egress.482069346.cidr_blocks.#:              "1"
      egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
      egress.482069346.description:                ""
      egress.482069346.from_port:                  "0"
      egress.482069346.ipv6_cidr_blocks.#:         "0"
      egress.482069346.prefix_list_ids.#:          "0"
      egress.482069346.protocol:                   "-1"
      egress.482069346.security_groups.#:          "0"
      egress.482069346.self:                       "false"
      egress.482069346.to_port:                    "0"
      ingress.#:                                   "2"
      ingress.2214680975.cidr_blocks.#:            "1"
      ingress.2214680975.cidr_blocks.0:            "0.0.0.0/0"
      ingress.2214680975.description:              ""
      ingress.2214680975.from_port:                "80"
      ingress.2214680975.ipv6_cidr_blocks.#:       "0"
      ingress.2214680975.prefix_list_ids.#:        "0"
      ingress.2214680975.protocol:                 "tcp"
      ingress.2214680975.security_groups.#:        "0"
      ingress.2214680975.self:                     "false"
      ingress.2214680975.to_port:                  "80"
      ingress.2617001939.cidr_blocks.#:            "1"
      ingress.2617001939.cidr_blocks.0:            "0.0.0.0/0"
      ingress.2617001939.description:              ""
      ingress.2617001939.from_port:                "443"
      ingress.2617001939.ipv6_cidr_blocks.#:       "0"
      ingress.2617001939.prefix_list_ids.#:        "0"
      ingress.2617001939.protocol:                 "tcp"
      ingress.2617001939.security_groups.#:        "0"
      ingress.2617001939.self:                     "false"
      ingress.2617001939.to_port:                  "443"
      name:                                        "demo-webservers-ALB"
      owner_id:                                    <computed>
      revoke_rules_on_delete:                      "false"
      tags.%:                                      "1"
      tags.Name:                                   "demo-webservers-ALB"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_subnet.private_subnet_1
      id:                                          <computed>
      arn:                                         <computed>
      assign_ipv6_address_on_creation:             "false"
      availability_zone:                           "us-east-2a"
      availability_zone_id:                        <computed>
      cidr_block:                                  "10.0.3.0/24"
      ipv6_cidr_block:                             <computed>
      ipv6_cidr_block_association_id:              <computed>
      map_public_ip_on_launch:                     "false"
      owner_id:                                    <computed>
      tags.%:                                      "1"
      tags.Name:                                   "demo-vpc-private-subnet-1"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_subnet.private_subnet_2
      id:                                          <computed>
      arn:                                         <computed>
      assign_ipv6_address_on_creation:             "false"
      availability_zone:                           "us-east-2b"
      availability_zone_id:                        <computed>
      cidr_block:                                  "10.0.4.0/24"
      ipv6_cidr_block:                             <computed>
      ipv6_cidr_block_association_id:              <computed>
      map_public_ip_on_launch:                     "false"
      owner_id:                                    <computed>
      tags.%:                                      "1"
      tags.Name:                                   "demo-vpc-private-subnet-2"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_subnet.public_subnet_1
      id:                                          <computed>
      arn:                                         <computed>
      assign_ipv6_address_on_creation:             "false"
      availability_zone:                           "us-east-2a"
      availability_zone_id:                        <computed>
      cidr_block:                                  "10.0.1.0/24"
      ipv6_cidr_block:                             <computed>
      ipv6_cidr_block_association_id:              <computed>
      map_public_ip_on_launch:                     "true"
      owner_id:                                    <computed>
      tags.%:                                      "1"
      tags.Name:                                   "demo-vpc-public-subnet-1"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_subnet.public_subnet_2
      id:                                          <computed>
      arn:                                         <computed>
      assign_ipv6_address_on_creation:             "false"
      availability_zone:                           "us-east-2b"
      availability_zone_id:                        <computed>
      cidr_block:                                  "10.0.2.0/24"
      ipv6_cidr_block:                             <computed>
      ipv6_cidr_block_association_id:              <computed>
      map_public_ip_on_launch:                     "true"
      owner_id:                                    <computed>
      tags.%:                                      "1"
      tags.Name:                                   "demo-vpc-public-subnet-2"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_vpc.main
      id:                                          <computed>
      arn:                                         <computed>
      assign_generated_ipv6_cidr_block:            "false"
      cidr_block:                                  "10.0.0.0/16"
      default_network_acl_id:                      <computed>
      default_route_table_id:                      <computed>
      default_security_group_id:                   <computed>
      dhcp_options_id:                             <computed>
      enable_classiclink:                          <computed>
      enable_classiclink_dns_support:              <computed>
      enable_dns_hostnames:                        "true"
      enable_dns_support:                          "true"
      instance_tenancy:                            "default"
      ipv6_association_id:                         <computed>
      ipv6_cidr_block:                             <computed>
      main_route_table_id:                         <computed>
      owner_id:                                    <computed>
      tags.%:                                      "1"
      tags.Name:                                   "demo-vpc"


Plan: 31 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------
